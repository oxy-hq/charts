{{/*
Define git sync paths
*/}}
{{- $gitRoot := default (printf "%s/git" .Values.persistence.mountPath) .Values.gitSync.root -}}
{{- $gitLink := default (printf "%s/current" .Values.persistence.mountPath) .Values.gitSync.link -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "oxy-app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oxy-app.labels" . | nindent 4 }}
    version: v1
spec:
  serviceName: {{ include "oxy-app.fullname" . }}-headless
  replicas: {{ .Values.app.replicaCount }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      {{- include "oxy-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "oxy-app.selectorLabels" . | nindent 8 }}
        version: v1
    spec:
      {{- $sa := include "oxy-app.serviceAccountName" . }}
      {{- if ne $sa "" }}
      serviceAccountName: {{ $sa | quote }}
      {{- end }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}

      {{- if or .Values.gitSync.enabled .Values.database.postgres.enabled .Values.extraInitContainers }}
      initContainers:
        {{- if .Values.database.postgres.enabled }}
        # Wait for PostgreSQL to be ready
        - name: wait-for-postgres
          image: postgres:16-alpine
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready \
                -h {{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local \
                -p 5432 \
                -U {{ default .Values.database.postgres.postgresqlUsername .Values.postgresql.auth.username }}; do
                echo "PostgreSQL is not ready yet. Waiting 5 seconds..."
                sleep 5
              done
              echo "PostgreSQL is ready and accepting connections!"
        {{- end }}
        {{- if .Values.gitSync.enabled }}
        # Git Clone Init Container
        # One-time secure clone using kubernetes/git-sync. This creates a
        # linked copy at /workspace/current that the long-running git-sync
        # sidecar will keep up-to-date.
        - name: git-clone
          image: k8s.gcr.io/git-sync/git-sync:v4.4.3
          imagePullPolicy: {{ .Values.gitSync.imagePullPolicy }}
          args:
            - --repo={{ .Values.gitSync.repository }}
            - --branch={{ .Values.gitSync.branch }}
            - --root={{ $gitRoot }}
            - --link={{ $gitLink }}
            - --one-time=true
            - --depth=1
            {{- if gt (len .Values.sshKeys) 0 }}
            {{- /* Multiple SSH keys: mount each to its own path */}}
            {{- range $idx, $sshKey := .Values.sshKeys }}
            - --ssh-key-file=/etc/git-secret/keys/{{ $sshKey.name }}
            {{- end }}
            {{- else }}
            {{- /* DEPRECATED: Legacy single SSH key */}}
            - --ssh-key-file=/etc/git-secret/ssh
            {{- end }}
            - --ssh-known-hosts-file=/etc/git-secret/known_hosts
            - --max-failures=5
            - --verbose=1
            - --one-time
            - --git-gc=off
          volumeMounts:
            - name: workspace
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if gt (len .Values.sshKeys) 0 }}
            {{- /* Mount each SSH key secret */}}
            {{- range $idx, $sshKey := .Values.sshKeys }}
            - name: git-ssh-{{ $idx }}
              mountPath: /etc/git-secret/keys/{{ $sshKey.name }}
              {{- if or $sshKey.key (not $sshKey.privateKey) }}
              subPath: {{ default "ssh" $sshKey.key }}
              {{- else }}
              subPath: ssh
              {{- end }}
              readOnly: true
            {{- end }}
            {{- /* Mount known_hosts from the first secret */}}
            - name: git-ssh-known-hosts
              mountPath: /etc/git-secret/known_hosts
              subPath: known_hosts
              readOnly: true
            {{- else }}
            {{- /* DEPRECATED: Legacy single SSH key mount */}}
            - name: git-ssh
              mountPath: /etc/git-secret
              readOnly: true
            {{- end }}
        {{- end }}

        {{- /* Render any user-supplied init containers */}}
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}

      containers:
        # Main Application Container
        - name: {{ include "oxy-app.name" . }}
          image: "{{ .Values.app.image }}:{{ default .Chart.AppVersion .Values.app.imageTag }}"
          {{- if and .Values.app.command (gt (len .Values.app.command) 0) }}
          command:
            {{- range .Values.app.command }}
            - {{ . | quote }}
            {{- end }}
          {{- else }}
          command:
            - sh
            - -c
            - |
              exec oxy serve{{- if not .Values.gitSync.enabled }} --readonly{{- end }}
          {{- end }}
          {{- if .Values.gitSync.enabled }}
          workingDir: {{ $gitLink }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.app.port }}
              protocol: TCP
              name: traffic-port

          # Environment Variables
          env:
            # State Directory Configuration
            {{- if and .Values.env.OXY_STATE_DIR (ne .Values.env.OXY_STATE_DIR "") }}
            - name: OXY_STATE_DIR
              value: {{ .Values.env.OXY_STATE_DIR | quote }}
            {{- else }}
            - name: OXY_STATE_DIR
              value: {{ printf "%s/%s" .Values.persistence.mountPath .Values.persistence.folder | quote }}
            {{- end }}

            # Database URL Configuration
            # Preference order (sqlite fallback intentionally omitted):
            # 1) Explicit value provided by caller via values.env.OXY_DATABASE_URL
            # 2) Explicit external.connectionString or external fields
            # 3) Postgres subchart connection (if user enabled it manually)
            # If none are provided, OXY_DATABASE_URL will not be set
            {{- if and .Values.env.OXY_DATABASE_URL (ne .Values.env.OXY_DATABASE_URL "") }}
            - name: OXY_DATABASE_URL
              value: {{ .Values.env.OXY_DATABASE_URL | quote }}
            {{- else if and .Values.database.external.enabled (ne .Values.database.external.connectionString "") }}
            - name: OXY_DATABASE_URL
              value: {{ .Values.database.external.connectionString | quote }}
            {{- else if .Values.database.external.enabled }}
            - name: OXY_DATABASE_URL
              value: {{ printf "postgresql://%s:%s@%s:%v/%s" 
                .Values.database.external.user 
                .Values.database.external.password 
                .Values.database.external.host 
                .Values.database.external.port 
                .Values.database.external.database | quote }}
            {{- else if .Values.database.postgres.enabled }}
            - name: OXY_DATABASE_URL
              value: {{ printf "postgresql://%s:%s@%s-postgresql.%s.svc.cluster.local:5432/%s"
                (default .Values.database.postgres.postgresqlUsername .Values.postgresql.auth.username)
                (default .Values.database.postgres.postgresqlPassword .Values.postgresql.auth.password)
                .Release.Name
                .Release.Namespace
                (default .Values.database.postgres.postgresqlDatabase .Values.postgresql.auth.database) | quote }}
            {{- end }}

          # ConfigMap / Secret Environment Variables
          {{- if or .Values.configMap.enabled (gt (len .Values.externalSecrets.envSecretNames) 0) }}
          envFrom:
            {{- if .Values.configMap.enabled }}
            - configMapRef:
                name: {{ include "oxy-app.fullname" . }}-config
            {{- end }}
            {{- range .Values.externalSecrets.envSecretNames }}
            - secretRef:
                name: {{ . | quote }}
            {{- end }}
          {{- end }}

          # Resource Limits and Requests
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          # Volume Mounts
          volumeMounts:
            - name: workspace
              mountPath: {{ .Values.persistence.mountPath }}
            {{- /* Mount environment secrets */}}
            {{- range $idx, $secretName := .Values.externalSecrets.envSecretNames }}
            - name: env-secret-{{ $idx }}
              mountPath: /secrets/env/{{ $secretName }}
              readOnly: true
            {{- end }}
            {{- /* Mount file secrets */}}
            {{- range $idx, $fileSecret := .Values.externalSecrets.fileSecrets }}
            - name: file-secret-{{ $idx }}
              mountPath: /secrets/files/{{ $fileSecret.name }}
              readOnly: true
            {{- end }}

          # Health Checks
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        {{- if .Values.gitSync.enabled }}
        # Git Sync Sidecar (keeps the repo up-to-date)
        - name: git-sync
          image: k8s.gcr.io/git-sync/git-sync:v4.4.3
          imagePullPolicy: {{ .Values.gitSync.imagePullPolicy }}
          args:
            - --repo={{ .Values.gitSync.repository }}
            - --branch={{ .Values.gitSync.branch }}
            - --root={{ $gitRoot }}
            - --link={{ $gitLink }}
            - --period={{ .Values.gitSync.period }}
            - --depth=1
            {{- if gt (len .Values.sshKeys) 0 }}
            {{- /* Multiple SSH keys: mount each to its own path */}}
            {{- range $idx, $sshKey := .Values.sshKeys }}
            - --ssh-key-file=/etc/git-secret/keys/{{ $sshKey.name }}
            {{- end }}
            {{- else }}
            {{- /* DEPRECATED: Legacy single SSH key */}}
            - --ssh-key-file=/etc/git-secret/ssh
            {{- end }}
            - --ssh-known-hosts-file=/etc/git-secret/known_hosts
            - --max-failures=5
            - --verbose=1
          volumeMounts:
            - name: workspace
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if gt (len .Values.sshKeys) 0 }}
            {{- /* Mount each SSH key secret */}}
            {{- range $idx, $sshKey := .Values.sshKeys }}
            - name: git-ssh-{{ $idx }}
              mountPath: /etc/git-secret/keys/{{ $sshKey.name }}
              {{- if or $sshKey.key (not $sshKey.privateKey) }}
              subPath: {{ default "ssh" $sshKey.key }}
              {{- else }}
              subPath: ssh
              {{- end }}
              readOnly: true
            {{- end }}
            {{- /* Mount known_hosts from the first secret */}}
            - name: git-ssh-known-hosts
              mountPath: /etc/git-secret/known_hosts
              subPath: known_hosts
              readOnly: true
            {{- else }}
            {{- /* DEPRECATED: Legacy single SSH key mount */}}
            - name: git-ssh
              mountPath: /etc/git-secret
              readOnly: true
            {{- end }}
        {{- end }}

        {{- /* Render user-supplied sidecars after built-in sidecars */}}
        {{- with .Values.extraSidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      # Volume Definitions
      volumes:
        {{- if .Values.gitSync.enabled }}
        {{- if gt (len .Values.sshKeys) 0 }}
        {{- /* Mount multiple SSH key secrets */}}
        {{- range $idx, $sshKey := .Values.sshKeys }}
        {{- $secretName := "" }}
        {{- if $sshKey.secretName }}
          {{- $secretName = $sshKey.secretName }}
        {{- else if $sshKey.privateKey }}
          {{- $secretName = printf "%s-%s" (include "oxy-app.fullname" $) $sshKey.name }}
        {{- end }}
        - name: git-ssh-{{ $idx }}
          secret:
            secretName: {{ $secretName }}
            defaultMode: 0400
            optional: false
        {{- end }}
        {{- /* Mount known_hosts from the first SSH key secret */}}
        {{- $firstSSHKey := index .Values.sshKeys 0 }}
        {{- $knownHostsSecretName := "" }}
        {{- if $firstSSHKey.secretName }}
          {{- $knownHostsSecretName = $firstSSHKey.secretName }}
        {{- else if $firstSSHKey.privateKey }}
          {{- $knownHostsSecretName = printf "%s-%s" (include "oxy-app.fullname" $) $firstSSHKey.name }}
        {{- end }}
        - name: git-ssh-known-hosts
          secret:
            secretName: {{ $knownHostsSecretName }}
            defaultMode: 0400
            optional: false
        {{- else }}
        {{- /* DEPRECATED: Legacy single SSH key secret */}}
        - name: git-ssh
          secret:
            secretName: {{ default .Values.gitSync.sshSecretName .Values.sshKey.secretName }}
            defaultMode: 0400
            optional: false
        {{- end }}
        {{- end }}
        {{- /* Environment secret volumes */}}
        {{- range $idx, $secretName := .Values.externalSecrets.envSecretNames }}
        - name: env-secret-{{ $idx }}
          secret:
            secretName: {{ $secretName | quote }}
            optional: true
        {{- end }}
        {{- /* File secret volumes */}}
        {{- range $idx, $fileSecret := .Values.externalSecrets.fileSecrets }}
        - name: file-secret-{{ $idx }}
          secret:
            secretName: {{ $fileSecret.name | quote }}
            optional: true
        {{- end }}

      # Node Selection and Tolerations
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  # Persistent Volume Claim Templates
  volumeClaimTemplates:
    - metadata:
        name: workspace
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.persistence.labels }}
        labels:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- with .Values.persistence.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        {{- with .Values.persistence.volumeMode }}
        volumeMode: {{ . }}
        {{- end }}
        {{- with .Values.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}