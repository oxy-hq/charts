suite: test ssh secret
templates:
  - ssh-secret.yaml
tests:
  - it: should not create secret when gitSync is disabled
    set:
      gitSync:
        enabled: false
      sshKey:
        privateKey: "test-private-key"
        publicKey: "test-public-key"
    asserts:
      - hasDocuments:
          count: 0

  - it: should not create secret when gitSync is enabled but no SSH keys provided
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      sshKey:
        privateKey: ""
        publicKey: ""
    asserts:
      - hasDocuments:
          count: 0

  - it: should create secret when gitSync enabled and privateKey provided
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
        sshSecretName: "oxy-git-ssh"
      sshKey:
        privateKey: "test-private-key"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: "oxy-git-ssh"
      - equal:
          path: type
          value: Opaque
      - isNotEmpty:
          path: data.ssh
      - isNotEmpty:
          path: data.known_hosts

  - it: should use custom secret name when sshKey.secretName is set
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
        sshSecretName: "default-name"
      sshKey:
        secretName: "custom-ssh-secret"
        privateKey: "test-private-key"
    asserts:
      - equal:
          path: metadata.name
          value: "custom-ssh-secret"

  - it: should fall back to gitSync.sshSecretName when sshKey.secretName is empty
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
        sshSecretName: "fallback-secret"
      sshKey:
        secretName: ""
        privateKey: "test-private-key"
    asserts:
      - equal:
          path: metadata.name
          value: "fallback-secret"

  - it: should use custom known_hosts when provided
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      sshKey:
        privateKey: "test-private-key"
        knownHosts: "custom.host.com ssh-rsa AAAA..."
    asserts:
      - isNotEmpty:
          path: data.known_hosts
      # The known_hosts should be base64 encoded
      - matchRegex:
          path: data.known_hosts
          pattern: "^[A-Za-z0-9+/=]+$"

  - it: should create secret with publicKey if provided
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      sshKey:
        privateKey: "test-private-key"
        publicKey: "test-public-key"
    asserts:
      - isNotEmpty:
          path: data.ssh
      - isNotEmpty:
          path: data.known_hosts

  - it: should include proper labels
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      sshKey:
        privateKey: "test-private-key"
    asserts:
      - isNotEmpty:
          path: metadata.labels
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: "oxy-app"
      - isNotEmpty:
          path: metadata.labels["app.kubernetes.io/instance"]

  - it: should set namespace correctly
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      sshKey:
        privateKey: "test-private-key"
    release:
      namespace: custom-namespace
    asserts:
      - equal:
          path: metadata.namespace
          value: custom-namespace

  - it: should create github app secret when githubApp fields provided inline
    set:
      gitSync:
        enabled: true
        repository: "https://github.com/example/repo.git"
        githubApp:
          privateKey: "my-pem"
          applicationId: "123"
          installationId: "456"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Secret
      - isNotEmpty:
          path: data["github_app_private_key"]
      - isNotEmpty:
          path: data["github_app_application_id"]
      - isNotEmpty:
          path: data["github_app_installation_id"]
