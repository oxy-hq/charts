suite: configmap tests
templates:
  - configmap.yaml

tests:
  # ConfigMap disabled by default
  - it: should not render ConfigMap when disabled
    set:
      configMap:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  # Basic ConfigMap rendering
  - it: should render ConfigMap when enabled
    set:
      configMap:
        enabled: true
        data:
          config.yaml: |
            app:
              name: oxy
              port: 3000
          app.properties: |
            debug=false
            log.level=info
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: RELEASE-NAME-oxy-app-config
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: oxy-app
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
      - equal:
          path: data["config.yaml"]
          value: |
            app:
              name: oxy
              port: 3000
      - equal:
          path: data["app.properties"]
          value: |
            debug=false
            log.level=info

  # Empty ConfigMap data
  - it: should handle empty data gracefully
    set:
      configMap:
        enabled: true
        data: {}
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data
          value: {}

  # Single configuration file
  - it: should support single configuration file
    set:
      configMap:
        enabled: true
        data:
          nginx.conf: |
            server {
              listen 80;
              server_name oxy.local;
              location / {
                proxy_pass http://localhost:3000;
              }
            }
    asserts:
      - equal:
          path: data["nginx.conf"]
          value: |
            server {
              listen 80;
              server_name oxy.local;
              location / {
                proxy_pass http://localhost:3000;
              }
            }

  # Multiple configuration formats
  - it: should support multiple configuration formats
    set:
      configMap:
        enabled: true
        data:
          config.yaml: |
            database:
              host: localhost
              port: 5432
          config.json: |
            {
              "cache": {
                "type": "redis",
                "host": "localhost"
              }
            }
          config.properties: |
            server.port=3000
            server.host=0.0.0.0
    asserts:
      - exists:
          path: data["config.yaml"]
      - exists:
          path: data["config.json"]
      - exists:
          path: data["config.properties"]
      - matchRegex:
          path: data["config.properties"]
          pattern: "server.port=3000"