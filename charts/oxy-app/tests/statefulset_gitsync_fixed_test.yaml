suite: statefulset git sync tests (fixed)
templates:
  - statefulset.yaml

tests:
  # Git sync disabled scenarios
  - it: should create StatefulSet without git-sync when disabled
    set:
      gitSync:
        enabled: false
    asserts:
      - isKind:
          of: StatefulSet
      - lengthEqual:
          path: spec.template.spec.containers
          count: 1
      - equal:
          path: spec.template.spec.containers[0].name
          value: RELEASE-NAME

  - it: should include readonly flag when git sync disabled
    set:
      gitSync:
        enabled: false
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].command[2]
          pattern: ".*--readonly.*"

  # Git sync enabled scenarios
  - it: should create StatefulSet with git-sync when enabled
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2
      - equal:
          path: spec.template.spec.containers[0].name
          value: RELEASE-NAME
      - equal:
          path: spec.template.spec.containers[1].name
          value: git-sync

  - it: should configure git-sync container with correct image
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[1].image
          value: "k8s.gcr.io/git-sync/git-sync:v4.4.3"

  - it: should configure git-sync args correctly
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
        branch: "develop"
        period: "30s"
      persistence:
        enabled: true
        mountPath: "/workspace"
    asserts:
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--repo=git@github.com:example/repo.git"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--branch=develop"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--period=30s"

  - it: should mount SSH secret correctly
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
        sshSecretName: "my-git-ssh"
      persistence:
        enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: git-ssh
            mountPath: /etc/git-secret
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: git-ssh
            secret:
              secretName: "my-git-ssh"
              optional: false

  - it: should not include readonly flag when git sync enabled
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
    asserts:
      - notMatchRegex:
          path: spec.template.spec.containers[0].command[2]
          pattern: ".*--readonly.*"

  - it: should create git clone init container when git sync enabled
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 1
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: git-clone

  - it: should configure git clone init container correctly
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:test/repo.git"
        branch: "main"
      persistence:
        enabled: true
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: "k8s.gcr.io/git-sync/git-sync:v4.4.3"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--repo=git@github.com:test/repo.git"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--branch=main"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--one-time=true"

  # Volume configurations
  - it: should share workspace volume between containers
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
        mountPath: "/data"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: workspace
            mountPath: "/data"
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: workspace
            mountPath: "/data"

  # Git sync with custom settings
  - it: should support custom git sync settings
    set:
      gitSync:
        enabled: true
        repository: "https://github.com/example/repo.git"
        branch: "feature-branch"
        period: "60s"
        imagePullPolicy: "Always"
      persistence:
        enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[1].imagePullPolicy
          value: "Always"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--period=60s"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--branch=feature-branch"

  # Verification that git sync requires persistence
  - it: should work with git sync when persistence is enabled
    set:
      gitSync:
        enabled: true
        repository: "git@github.com:example/repo.git"
      persistence:
        enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2