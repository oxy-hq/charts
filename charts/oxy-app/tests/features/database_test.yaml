suite: database feature tests
templates:
  - statefulset.yaml

tests:
  # Default database configuration (no postgres, no external)
  - it: uses OXY_DATABASE_URL when provided explicitly
    set:
      env.OXY_DATABASE_URL: "postgresql://custom:pass@host:5432/db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://custom:pass@host:5432/db"

  # Internal PostgreSQL enabled
  - it: configures database URL for internal postgres
    set:
      database.postgres.enabled: true
      database.postgres.postgresqlUsername: "testuser"
      database.postgres.postgresqlPassword: "testpass"
      database.postgres.postgresqlDatabase: "testdb"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://testuser:testpass@RELEASE-NAME-postgresql:5432/testdb"

  # Internal PostgreSQL with custom service name
  - it: handles internal postgres with release name
    set:
      database.postgres.enabled: true
      database.postgres.postgresqlUsername: "oxy"
      database.postgres.postgresqlPassword: "secret"
      database.postgres.postgresqlDatabase: "oxydb"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://oxy:secret@RELEASE-NAME-postgresql:5432/oxydb"

  # External database with connection string
  - it: uses external database connection string when provided
    set:
      database.external.enabled: true
      database.external.connectionString: "postgresql://external:pass@external-host:5432/external_db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://external:pass@external-host:5432/external_db"

  # External database with individual components
  - it: builds connection string from external database components
    set:
      database.external.enabled: true
      database.external.user: "external_user"
      database.external.password: "external_pass"
      database.external.host: "external-host"
      database.external.port: 5433
      database.external.database: "external_db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://external_user:external_pass@external-host:5433/external_db"

  # Priority: explicit OXY_DATABASE_URL > internal postgres > external
  - it: prioritizes explicit OXY_DATABASE_URL over internal postgres
    set:
      env.OXY_DATABASE_URL: "postgresql://explicit:pass@explicit-host:5432/explicit_db"
      database.postgres.enabled: true
      database.postgres.postgresqlUsername: "internal"
      database.postgres.postgresqlPassword: "internal"
      database.postgres.postgresqlDatabase: "internal"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://explicit:pass@explicit-host:5432/explicit_db"

  - it: prioritizes explicit OXY_DATABASE_URL over external database
    set:
      env.OXY_DATABASE_URL: "postgresql://explicit:pass@explicit-host:5432/explicit_db"
      database.external.enabled: true
      database.external.connectionString: "postgresql://external:pass@external-host:5432/external_db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://explicit:pass@explicit-host:5432/explicit_db"

  # Internal postgres takes priority over external when both enabled
  - it: prioritizes internal postgres over external database
    set:
      database.postgres.enabled: true
      database.postgres.postgresqlUsername: "internal"
      database.postgres.postgresqlPassword: "internal"
      database.postgres.postgresqlDatabase: "internal"
      database.external.enabled: true
      database.external.connectionString: "postgresql://external:pass@external-host:5432/external_db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://internal:internal@RELEASE-NAME-postgresql:5432/internal"

  # Default port handling
  - it: uses default port 5432 when not specified for external db
    set:
      database.external.enabled: true
      database.external.user: "user"
      database.external.password: "pass"
      database.external.host: "host"
      database.external.database: "db"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL
            value: "postgresql://user:pass@host:5432/db"

  # Empty/minimal configurations
  - it: handles empty external database configuration gracefully
    set:
      database.external.enabled: true
      database.external.connectionString: ""
      database.external.user: ""
      database.external.password: ""
      database.external.host: ""
      database.external.database: ""
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL

  # No database configuration at all
  - it: does not set OXY_DATABASE_URL when no database is configured
    set:
      env.OXY_DATABASE_URL: ""
      database.postgres.enabled: false
      database.external.enabled: false
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: OXY_DATABASE_URL