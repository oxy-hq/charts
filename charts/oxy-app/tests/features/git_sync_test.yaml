suite: git sync feature tests
templates:
  - statefulset.yaml

tests:
  # Git sync disabled (default)
  - it: does not include git sync containers when disabled
    asserts:
      - notExists:
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.spec.containers | length
          value: 1

  # Git sync enabled
  - it: includes git sync init container when enabled
    set:
      gitSync.enabled: true
      gitSync.repository: "https://github.com/test/repo.git"
      gitSync.branch: "main"
    asserts:
      - exists:
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: git-clone
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: k8s.gcr.io/git-sync/git-sync:v4.4.3
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--repo=https://github.com/test/repo.git"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--branch=main"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--one-time"

  - it: includes git sync sidecar container when enabled
    set:
      gitSync.enabled: true
      gitSync.repository: "https://github.com/test/repo.git"
      gitSync.branch: "main"
      gitSync.period: "30s"
    asserts:
      - equal:
          path: spec.template.spec.containers | length
          value: 2
      - equal:
          path: spec.template.spec.containers[1].name
          value: git-sync
      - equal:
          path: spec.template.spec.containers[1].image
          value: k8s.gcr.io/git-sync/git-sync:v4.4.3
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--repo=https://github.com/test/repo.git"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--branch=main"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--wait=30s"

  # SSH configuration
  - it: configures SSH secret when provided
    set:
      gitSync.enabled: true
      gitSync.repository: "git@github.com:test/repo.git"
      gitSync.sshSecretName: "my-ssh-secret"
    asserts:
      - contains:
          path: spec.template.spec.initContainers[0].volumeMounts
          content:
            name: git-ssh-secret
            mountPath: /etc/git-secret
            readOnly: true
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: git-ssh-secret
            mountPath: /etc/git-secret
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: git-ssh-secret
            secret:
              secretName: my-ssh-secret
              defaultMode: 256

  # Git sync paths configuration
  - it: configures correct git sync paths
    set:
      gitSync.enabled: true
      gitSync.repository: "https://github.com/test/repo.git"
      gitSync.root: "/workspace/custom-git"
      gitSync.link: "/workspace/custom-current"
      persistence.mountPath: "/workspace"
    asserts:
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--root=/workspace/custom-git"
      - contains:
          path: spec.template.spec.initContainers[0].args
          content: "--link=/workspace/custom-current"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--root=/workspace/custom-git"
      - contains:
          path: spec.template.spec.containers[1].args
          content: "--link=/workspace/custom-current"

  # Git user configuration
  - it: configures git user when provided
    set:
      gitSync.enabled: true
      gitSync.repository: "https://github.com/test/repo.git"
      gitSync.userName: "Test User"
      gitSync.userEmail: "test@example.com"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GIT_AUTHOR_NAME
            value: "Test User"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GIT_AUTHOR_EMAIL
            value: "test@example.com"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GIT_COMMITTER_NAME
            value: "Test User"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GIT_COMMITTER_EMAIL
            value: "test@example.com"

  # Volume mounts for git sync
  - it: mounts workspace volume in git sync containers
    set:
      gitSync.enabled: true
      gitSync.repository: "https://github.com/test/repo.git"
    asserts:
      - contains:
          path: spec.template.spec.initContainers[0].volumeMounts
          content:
            name: workspace
            mountPath: /workspace
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: workspace
            mountPath: /workspace