suite: external secrets feature tests
templates:
  - externalsecret.yaml
  - statefulset.yaml

tests:
  # External secrets disabled (default)
  - it: does not render ExternalSecret when create is false
    template: externalsecret.yaml
    set:
      externalSecrets.create: false
    asserts:
      - hasDocuments:
          count: 0

  # External secrets enabled
  - it: renders ExternalSecret when create is true
    template: externalsecret.yaml
    set:
      externalSecrets.create: true
      externalSecrets.storeRef.name: "test-store"
      externalSecrets.storeRef.kind: "SecretStore"
      externalSecrets.envSecretMappings:
        test-secret:
          DATABASE_URL: "/db/url"
          API_KEY: "/api/key"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: kind
          value: ExternalSecret
      - equal:
          path: apiVersion
          value: external-secrets.io/v1beta1
      - equal:
          path: spec.secretStoreRef.name
          value: "test-store"
      - equal:
          path: spec.secretStoreRef.kind
          value: "SecretStore"

  # Environment secret mappings
  - it: creates correct data mappings from envSecretMappings
    template: externalsecret.yaml
    set:
      externalSecrets.create: true
      externalSecrets.storeRef.name: "test-store"
      externalSecrets.storeRef.kind: "SecretStore"
      externalSecrets.envSecretMappings:
        test-secret:
          DATABASE_URL: "/secrets/db/url"
          API_KEY: "/secrets/api/key"
          DEBUG_MODE: "/app/debug"
    asserts:
      - contains:
          path: spec.data
          content:
            secretKey: DATABASE_URL
            remoteRef:
              key: "/secrets/db/url"
      - contains:
          path: spec.data
          content:
            secretKey: API_KEY
            remoteRef:
              key: "/secrets/api/key"
      - contains:
          path: spec.data
          content:
            secretKey: DEBUG_MODE
            remoteRef:
              key: "/app/debug"

  # Target secret configuration
  - it: configures target secret correctly
    template: externalsecret.yaml
    set:
      externalSecrets.create: true
      externalSecrets.storeRef.name: "test-store"
      externalSecrets.storeRef.kind: "SecretStore"
      externalSecrets.envSecretMappings:
        test-secret:
          KEY: "/path"
    asserts:
      - equal:
          path: spec.target.name
          value: "RELEASE-NAME-test-secret"
      - equal:
          path: spec.target.creationPolicy
          value: "Owner"

  # Environment secret names in StatefulSet
  - it: mounts environment secrets in StatefulSet
    template: statefulset.yaml
    set:
      externalSecrets.envSecretNames:
        - "secret-1"
        - "secret-2"
        - "secret-3"
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: env-secret-secret-1
            secret:
              secretName: secret-1
      - contains:
          path: spec.template.spec.volumes
          content:
            name: env-secret-secret-2
            secret:
              secretName: secret-2
      - contains:
          path: spec.template.spec.volumes
          content:
            name: env-secret-secret-3
            secret:
              secretName: secret-3

  # File secrets in StatefulSet
  - it: mounts file secrets in StatefulSet
    template: statefulset.yaml
    set:
      externalSecrets.fileSecrets:
        - name: "cert-secret"
          key: "tls.crt"
          dest: "server.crt"
        - name: "key-secret"
          key: "private.key"
          dest: "server.key"
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: file-secret-cert-secret
            secret:
              secretName: cert-secret
      - contains:
          path: spec.template.spec.volumes
          content:
            name: file-secret-key-secret
            secret:
              secretName: key-secret
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: file-secret-cert-secret
            mountPath: "/secrets/files/server.crt"
            subPath: "tls.crt"
            readOnly: true
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: file-secret-key-secret
            mountPath: "/secrets/files/server.key"
            subPath: "private.key"
            readOnly: true

  # File secrets with default destination
  - it: uses key as destination when dest not provided
    template: statefulset.yaml
    set:
      externalSecrets.fileSecrets:
        - name: "default-secret"
          key: "config.yaml"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: file-secret-default-secret
            mountPath: "/secrets/files/config.yaml"
            subPath: "config.yaml"
            readOnly: true

  # Multiple external secrets
  - it: handles multiple ExternalSecret definitions
    template: externalsecret.yaml
    set:
      externalSecrets.create: true
      externalSecrets.storeRef.name: "test-store"
      externalSecrets.storeRef.kind: "SecretStore"
      externalSecrets.envSecretMappings:
        db-secret:
          DATABASE_URL: "/db/url"
        api-secret:
          API_KEY: "/api/key"
        cache-secret:
          REDIS_URL: "/cache/url"
    asserts:
      - hasDocuments:
          count: 3

  # ClusterSecretStore reference
  - it: supports ClusterSecretStore reference
    template: externalsecret.yaml
    set:
      externalSecrets.create: true
      externalSecrets.storeRef.name: "cluster-store"
      externalSecrets.storeRef.kind: "ClusterSecretStore"
      externalSecrets.envSecretMappings:
        test-secret:
          KEY: "/path"
    asserts:
      - equal:
          path: spec.secretStoreRef.kind
          value: "ClusterSecretStore"
      - equal:
          path: spec.secretStoreRef.name
          value: "cluster-store"