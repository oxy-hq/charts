name: Helm tests and release

# This workflow runs comprehensive tests on all chart changes (both PRs and pushes to main)
# but only publishes/releases charts when pushing to the main branch.
# Uses modular scripts for better maintainability and local development support.

on:
  push:
    branches:
      - main
    paths:
      - "charts/**"
      - "scripts/**"
  pull_request:
    branches:
      - main
    paths:
      - "charts/**"
      - "scripts/**"

jobs:
  test:
    name: Test charts
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Install helm-unittest plugin
        run: |
          helm plugin install https://github.com/quintush/helm-unittest

      - name: Run chart-testing (list-changed)
        id: list-changed
        if: github.event_name == 'pull_request'
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Make scripts executable
        run: |
          chmod +x scripts/**/*.sh

      - name: Run chart-testing (lint)
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          ct lint --target-branch ${{ github.event.repository.default_branch }} --config ct.yaml

      - name: Run helm unittest for oxy-app
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          # Run comprehensive unit tests located under charts/oxy-app/tests
          # Tests are now organized as focused test suites
          helm unittest ./charts/oxy-app

      - name: Create kind cluster
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: helm-integration-test
          config: ./kind-config.yaml

      - name: Install NGINX Ingress Controller
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: Run chart-testing (install)
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          ct install --target-branch ${{ github.event.repository.default_branch }} --config ct.yaml

      - name: Setup test environment
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          # Create test secrets and setup environment using our common utilities
          export CI=true
          source scripts/utils/common.sh
          create_test_secrets
          update_test_values_for_kind

      - name: Run basic integration tests
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          export CI=true
          ./scripts/tests/01-basic-tests.sh

      - name: Run advanced feature tests
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          export CI=true
          ./scripts/tests/02-advanced-tests.sh

      - name: Run comprehensive feature tests
        if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'
        run: |
          export CI=true
          ./scripts/tests/03-comprehensive-tests.sh

      - name: Verify cleanup
        if: always() && (github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true')
        run: |
          export CI=true
          ./scripts/utils/cleanup.sh --verify-only

  publish:
    name: Package & Publish Helm charts
    runs-on: ubuntu-latest
    needs: test
    # Only run on pushes to main branch, never on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
    steps:
      - name: Verify this is a main branch push (not a PR)
        run: |
          if [[ "${{ github.event_name }}" != "push" ]]; then
            echo "❌ ERROR: Publish job should only run on push events, not ${{ github.event_name }}"
            exit 1
          fi
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "❌ ERROR: Publish job should only run on main branch, not ${{ github.ref }}"
            exit 1
          fi
          echo "✅ Verified: This is a push to main branch - proceeding with publish"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.ARGO_APP_ID }}
          private-key: ${{ secrets.ARGO_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Configure Git
        run: |
          git config --global user.email "153820223+oxyhelper[bot]@users.noreply.github.com"
          git config --global user.name "oxyhelper[bot]"

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ steps.app-token.outputs.token }}"
          CR_SKIP_EXISTING: "true"
        with:
          charts_dir: charts
          config: cr.yaml

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/${{ github.repository_owner }}/helm-charts"
          done